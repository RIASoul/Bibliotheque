package view;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.io.*;
import model.UtilisateurModel;
import model.Utilisateur;
import main.Main; // Add this import to use the MenuView

public class Login extends JFrame {
    private UtilisateurModel utilisateurModel = new UtilisateurModel();

    public Login() {
        setTitle("Gestion des Utilisateurs");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Panel principal
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(2, 1, 10, 10));

        // Boutons principaux
        JButton btnInscription = new JButton("Inscription");
        JButton btnConnexion = new JButton("Connexion");

        panel.add(btnInscription);
        panel.add(btnConnexion);

        add(panel, BorderLayout.CENTER);

        // Action pour le bouton Inscription
        btnInscription.addActionListener(e -> afficherFormulaireInscription());

        // Action pour le bouton Connexion
        btnConnexion.addActionListener(e -> afficherFormulaireConnexion());
    }

    private void afficherFormulaireInscription() {
        // Création du formulaire
        JDialog dialog = new JDialog(this, "Inscription", true);
        dialog.setSize(300, 400);
        dialog.setLayout(new GridLayout(7, 2, 10, 10));

        JLabel lblNom = new JLabel("Nom:");
        JTextField txtNom = new JTextField();

        JLabel lblPrenom = new JLabel("Prénom:");
        JTextField txtPrenom = new JTextField();

        JLabel lblEmail = new JLabel("Email:");
        JTextField txtEmail = new JTextField();

        JLabel lblRole = new JLabel("Rôle:");
        JTextField txtRole = new JTextField();

        JLabel lblPassword = new JLabel("Mot de passe:");
        JPasswordField txtPassword = new JPasswordField();

        JButton btnValider = new JButton("Valider");
        JButton btnAnnuler = new JButton("Annuler");

        dialog.add(lblNom);
        dialog.add(txtNom);
        dialog.add(lblPrenom);
        dialog.add(txtPrenom);
        dialog.add(lblEmail);
        dialog.add(txtEmail);
        dialog.add(lblRole);
        dialog.add(txtRole);
        dialog.add(lblPassword);
        dialog.add(txtPassword);
        dialog.add(btnValider);
        dialog.add(btnAnnuler);

        // Action pour le bouton Valider
        btnValider.addActionListener(e -> {
            String nom = txtNom.getText();
            String prenom = txtPrenom.getText();
            String email = txtEmail.getText();
            String role = txtRole.getText();
            String password = new String(txtPassword.getPassword());

            if (nom.isEmpty() || prenom.isEmpty() || email.isEmpty() || role.isEmpty() || password.isEmpty()) {
                JOptionPane.showMessageDialog(dialog, "Veuillez remplir tous les champs.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!email.contains("@")) {
                JOptionPane.showMessageDialog(dialog, "Veuillez entrer un email valide.", "Erreur", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Création de l'utilisateur
            Utilisateur utilisateur = new Utilisateur(nom, prenom, email, role);
            utilisateurModel.ajouterUser(utilisateur);

            // Sauvegarde dans le fichier credentials.csv
            try (BufferedWriter bw = new BufferedWriter(new FileWriter("credentials.csv", true))) {
                bw.write(email + "," + password);
                bw.newLine();
                JOptionPane.showMessageDialog(dialog, "Utilisateur enregistré avec succès !");
                dialog.dispose();
                // Redirect to login form after successful registration
                afficherFormulaireConnexion();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(dialog, "Erreur lors de l'enregistrement : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Action pour le bouton Annuler
        btnAnnuler.addActionListener(e -> dialog.dispose());

        dialog.setVisible(true);
    }

    private void afficherFormulaireConnexion() {
        // Création du formulaire de connexion
        JDialog dialog = new JDialog(this, "Connexion", true);
        dialog.setSize(300, 200);
        dialog.setLayout(new GridLayout(3, 2, 10, 10));

        JLabel lblEmail = new JLabel("Email:");
        JTextField txtEmail = new JTextField();

        JLabel lblPassword = new JLabel("Mot de passe:");
        JPasswordField txtPassword = new JPasswordField();

        JButton btnConnexion = new JButton("Connexion");
        JButton btnAnnuler = new JButton("Annuler");

        dialog.add(lblEmail);
        dialog.add(txtEmail);
        dialog.add(lblPassword);
        dialog.add(txtPassword);
        dialog.add(btnConnexion);
        dialog.add(btnAnnuler);

        // Action pour le bouton Connexion
        btnConnexion.addActionListener(e -> {
            String emailInput = txtEmail.getText();
            String passwordInput = new String(txtPassword.getPassword());

            boolean credentialsValid = false;
            String role = "";
            try (BufferedReader br = new BufferedReader(new FileReader("credentials.csv"))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] parts = line.split(",");
                    if (parts[0].equals(emailInput) && parts[1].equals(passwordInput)) {
                        credentialsValid = true;
                        // Retrieve the user's role from the UtilisateurModel or another source
                        role = utilisateurModel.getUserRoleByEmail(emailInput); 
                        break;
                    }
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(dialog, "Erreur lors de la vérification des identifiants : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }

            if (credentialsValid) {
                JOptionPane.showMessageDialog(dialog, "Connexion réussie !");
                dialog.dispose();
                 
                    // Redirect to the menu interface if the user is "bibliothécaire"
                    MenuView menuView = new MenuView();
                    menuView.setVisible(true);
                
            } else {
                JOptionPane.showMessageDialog(dialog, "Email ou mot de passe incorrect.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Action pour le bouton Annuler
        btnAnnuler.addActionListener(e -> dialog.dispose());

        dialog.setVisible(true);
    }
}
